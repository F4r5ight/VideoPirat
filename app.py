import os
import re
import time
import asyncio
import logging
import threading
import subprocess
from flask import Flask, request
from urllib.parse import urlparse
import yt_dlp
import telegram
from telegram import Bot
from telegram.ext import ApplicationBuilder

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.environ.get("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (BOT_TOKEN)")

# –°–æ–∑–¥–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤
app = Flask(__name__)

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
os.makedirs('temp', exist_ok=True)

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∏ –∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω—ã URL
SUPPORTED_PLATFORMS = {
    'instagram': r'https?://(www\.)?(instagram\.com|instagr\.am)/(?:p|reel)/[^/]+',
    'tiktok': r'https?://(www\.)?(tiktok\.com)/(@[^/]+)/video/\d+',
    'twitter': r'https?://(www\.)?(twitter\.com|x\.com)/[^/]+/status/\d+',
    'youtube': r'https?://(www\.)?(youtube\.com/watch\?v=|youtu\.be/)[^&\s]+',
    'facebook': r'https?://(www\.)?(facebook\.com|fb\.watch)/[^/]+(/videos/|/watch/\?v=)\d+',
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤)
bot = Bot(token=BOT_TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
application = ApplicationBuilder().token(BOT_TOKEN).build()


def send_start_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot –≤–º–µ—Å—Ç–æ application.bot
        bot.send_message(
            chat_id=chat_id,
            text="üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ —Å–æ—Ü—Å–µ—Ç–µ–π.\n\n"
                 "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –∏–∑ Instagram, TikTok, Twitter, YouTube –∏–ª–∏ Facebook, "
                 "–∏ —è –∏–∑–≤–ª–µ–∫—É –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ–±—è.\n\n"
                 "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /–∏–Ω—Ñ–æ"
        )
        logger.info(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


def send_info_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
        bot.send_message(
            chat_id=chat_id,
            text="üìã <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
                 "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç —Å –≤–∏–¥–µ–æ –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–π —Å–æ—Ü—Å–µ—Ç–∏\n"
                 "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –º–Ω–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏\n"
                 "3. –î–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ —è —Å–∫–∞—á–∞—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –≤–∏–¥–µ–æ\n\n"
                 "<b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:</b>\n"
                 "‚Ä¢ Instagram (–ø–æ—Å—Ç—ã –∏ Reels)\n"
                 "‚Ä¢ TikTok\n"
                 "‚Ä¢ Twitter/X\n"
                 "‚Ä¢ YouTube\n"
                 "‚Ä¢ Facebook\n\n"
                 "<b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>\n"
                 "/—Å—Ç–∞—Ä—Ç - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
                 "/–∏–Ω—Ñ–æ - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É",
            parse_mode="HTML"
        )
        logger.info(f"–°–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


def extract_url(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç URL –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    url_pattern = r'https?://\S+'
    urls = re.findall(url_pattern, text)
    if urls:
        return urls[0]
    return None


def is_supported_url(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ URL"""
    for platform, pattern in SUPPORTED_PLATFORMS.items():
        if re.match(pattern, url):
            return True
    return False


def get_platform(url):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ø–æ URL"""
    domain = urlparse(url).netloc
    if 'instagram' in domain or 'instagr.am' in domain:
        return 'instagram'
    elif 'tiktok' in domain:
        return 'tiktok'
    elif 'twitter' in domain or 'x.com' in domain:
        return 'twitter'
    elif 'youtube' in domain or 'youtu.be' in domain:
        return 'youtube'
    elif 'facebook' in domain or 'fb.watch' in domain:
        return 'facebook'
    return 'unknown'


def cleanup_temp_files():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"""
    try:
        for file in os.listdir('temp'):
            file_path = os.path.join('temp', file)
            if os.path.isfile(file_path) and (time.time() - os.path.getmtime(file_path)) > 3600:  # –°—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞
                os.remove(file_path)
                logger.info(f"–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {file_path}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {e}")


def download_video(url, platform):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º yt-dlp"""
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ URL –¥–ª—è Instagram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        if platform == 'instagram' and os.environ.get("USE_INSTAGRAM_PROXY", "0") == "1":
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è Instagram
            url = f"https://www.ddinstagram.com/{url.split('instagram.com/')[1]}"
            logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è Instagram: {url}")

        # –û–ø—Ü–∏–∏ –¥–ª—è yt-dlp —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π —Ä–∞–∑–º–µ—Ä–∞/–∫–∞—á–µ—Å—Ç–≤–∞
        ydl_opts = {
            'format': 'best[height<=720][ext=mp4]/best[height<=720]/best[ext=mp4]/best',
            'outtmpl': 'temp/%(title)s_%(id)s.%(ext)s',
            'restrictfilenames': True,
            'noplaylist': True,
            'quiet': True,
            'no_warnings': True,
            'socket_timeout': 60,  # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç
            # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ–¥–µ—Ä—ã –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
            'http_headers': {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
                'Accept-Language': 'en-US,en;q=0.9',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                'Referer': 'https://www.google.com/'
            }
        }

        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            video_path = ydl.prepare_filename(info)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if os.path.exists(video_path):
                # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ mp4, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ —Å –ø–æ–º–æ—â—å—é ffmpeg
                if not video_path.endswith('.mp4'):
                    new_path = f"{os.path.splitext(video_path)[0]}.mp4"
                    cmd = f"ffmpeg -i \"{video_path}\" -c:v libx264 -crf 23 -preset medium -c:a aac -b:a 128k \"{new_path}\""
                    subprocess.call(cmd, shell=True)

                    if os.path.exists(new_path):
                        if os.path.exists(video_path):
                            os.remove(video_path)
                        video_path = new_path

            return video_path
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
        raise


def compress_video(video_path):
    """–°–∂–∏–º–∞–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è Telegram"""
    compressed_path = f"{os.path.splitext(video_path)[0]}_compressed.mp4"

    # –°–∂–∏–º–∞–µ–º –≤–∏–¥–µ–æ –¥–ª—è Telegram
    cmd = f"ffmpeg -i \"{video_path}\" -c:v libx264 -crf 28 -preset faster -vf scale=-2:480 -r 24 -c:a aac -b:a 96k \"{compressed_path}\""
    subprocess.call(cmd, shell=True)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∂–∞—Ç–∏—è
    if os.path.exists(compressed_path) and os.path.getsize(compressed_path) <= 50 * 1024 * 1024:
        return compressed_path

    # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –≤—Å—ë –µ—â–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, –ø—Ä–æ–±—É–µ–º –µ—â—ë —Å–∏–ª—å–Ω–µ–µ —Å–∂–∞—Ç—å
    more_compressed_path = f"{os.path.splitext(video_path)[0]}_more_compressed.mp4"
    cmd = f"ffmpeg -i \"{video_path}\" -c:v libx264 -crf 32 -preset faster -vf scale=-2:360 -r 20 -c:a aac -b:a 64k \"{more_compressed_path}\""
    subprocess.call(cmd, shell=True)

    if os.path.exists(more_compressed_path) and os.path.getsize(more_compressed_path) <= 50 * 1024 * 1024:
        # –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—É—é —Å–∂–∞—Ç—É—é –≤–µ—Ä—Å–∏—é
        if os.path.exists(compressed_path):
            os.remove(compressed_path)
        return more_compressed_path

    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∂–∞—Ç—å –¥–æ –Ω—É–∂–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    return None


def cleanup_video_files(video_path):
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–∏–¥–µ–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"""
    temp_files = [
        video_path,
        f"{os.path.splitext(video_path)[0]}_compressed.mp4",
        f"{os.path.splitext(video_path)[0]}_more_compressed.mp4"
    ]

    for file in temp_files:
        if os.path.exists(file):
            os.remove(file)


def download_and_send_video(url, platform, chat_id, status_message_id):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ"""
    try:
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        cleanup_temp_files()

        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        video_path = download_video(url, platform)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(video_path)
        max_telegram_size = 50 * 1024 * 1024  # 50 –ú–ë –≤ –±–∞–π—Ç–∞—Ö

        if file_size > max_telegram_size:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π, –ø—Ä–æ–±—É–µ–º —Å–∂–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ
            application.bot.edit_message_text(
                chat_id=chat_id,
                message_id=status_message_id,
                text="‚è≥ –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, –ø—Ä–∏–º–µ–Ω—è—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–∂–∞—Ç–∏–µ..."
            )

            compressed_path = compress_video(video_path)
            if compressed_path:
                video_path = compressed_path
            else:
                application.bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=status_message_id,
                    text="‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram –¥–∞–∂–µ –ø–æ—Å–ª–µ —Å–∂–∞—Ç–∏—è (>50MB)"
                )
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                cleanup_video_files(video_path)
                return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤ —á–∞—Ç
        with open(video_path, 'rb') as video_file:
            application.bot.send_video(
                chat_id=chat_id,
                video=video_file,
                caption=f"üé¨ –í–∏–¥–µ–æ –∏–∑ {platform.capitalize()}\nüîó {url}",
                supports_streaming=True
            )

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        application.bot.delete_message(chat_id=chat_id, message_id=status_message_id)

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        cleanup_video_files(video_path)

    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        error_message = str(e)
        short_error = error_message[:100] + "..." if len(error_message) > 100 else error_message

        error_text = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ"

        if "Unsupported URL" in error_message:
            error_text = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ: —Å—Å—ã–ª–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
        elif "Private video" in error_message or "This video is private" in error_message:
            error_text = "‚ùå –≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –≤–∏–¥–µ–æ, –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–º—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω."
        elif "Login required" in error_message or "sign in" in error_message.lower():
            error_text = "‚ùå –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è."

        try:
            application.bot.edit_message_text(
                chat_id=chat_id,
                message_id=status_message_id,
                text=f"{error_text}: {short_error}"
            )
        except Exception:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            bot.send_message(chat_id=chat_id, text=f"{error_text}: {short_error}")

        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ URL {url}: {e}")


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞
async def set_webhook_async(webhook_url):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–µ–±—Ö—É–∫"""
    try:
        logger.info(f"–£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –≤–µ–±—Ö—É–∫...")
        await bot.delete_webhook()

        logger.info(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫ –Ω–∞ {webhook_url}")
        webhook_info = await bot.set_webhook(url=webhook_url)

        logger.info(f"–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_info}")
        return f'Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ {webhook_url}. –†–µ–∑—É–ª—å—Ç–∞—Ç: {webhook_info}'
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞: {e}")
        raise  # –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤—ã—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ Telegram
@app.route('/' + BOT_TOKEN, methods=['POST'])
def webhook():
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram"""
    try:
        update_data = request.get_json(force=True)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {update_data}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if 'message' not in update_data:
            return 'OK'

        chat_id = update_data['message']['chat']['id']

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞
        if 'text' not in update_data['message']:
            return 'OK'

        text = update_data['message']['text']
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {text}")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        if text.startswith('/start') or text.startswith('/—Å—Ç–∞—Ä—Ç'):
            logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /—Å—Ç–∞—Ä—Ç –æ—Ç {chat_id}")
            send_start_message(chat_id)
            return 'OK'

        if text.startswith('/help') or text.startswith('/–∏–Ω—Ñ–æ'):
            logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /–∏–Ω—Ñ–æ –æ—Ç {chat_id}")
            send_info_message(chat_id)
            return 'OK'

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ URL
        url = extract_url(text)
        if url and is_supported_url(url):
            platform = get_platform(url)
            logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ {platform} –æ—Ç {chat_id}: {url}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            status_message = bot.send_message(
                chat_id=chat_id,
                text=f"‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ {platform.capitalize()}..."
            )

            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            thread = threading.Thread(
                target=download_and_send_video,
                args=(url, platform, chat_id, status_message.message_id)
            )
            thread.daemon = True  # –ü–æ—Ç–æ–∫ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
            thread.start()
        else:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç URL
            if not text.startswith('/'):
                logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
                bot.send_message(
                    chat_id=chat_id,
                    text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–π —Å–æ—Ü—Å–µ—Ç–∏. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /–∏–Ω—Ñ–æ"
                )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook: {e}")

    return 'OK'


# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
@app.route('/')
def index():
    return '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!'


# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞
@app.route('/set_webhook')
def set_webhook_route():
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞"""
    # –ü–æ–ª—É—á–∞–µ–º URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ—Ç Railway
    # Railway –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏—è—Ö
    app_domain = os.environ.get('RAILWAY_PUBLIC_DOMAIN')
    webhook_base_url = None

    if app_domain:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–∞–µ—Ç –ª–∏ –¥–æ–º–µ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª
        if not app_domain.startswith(('http://', 'https://')):
            webhook_base_url = f"https://{app_domain}"
        else:
            webhook_base_url = app_domain
    else:
        # –î—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        static_url = os.environ.get('RAILWAY_STATIC_URL')
        if static_url:
            webhook_base_url = static_url
        else:
            # –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
            webhook_base_url = os.environ.get('APP_URL', 'https://your-app-url.railway.app')

    # –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª–µ—à–∏ –≤ –∫–æ–Ω—Ü–µ URL
    if webhook_base_url.endswith('/'):
        webhook_base_url = webhook_base_url[:-1]

    webhook_url = f"{webhook_base_url}/{BOT_TOKEN}"

    logger.info(f"–ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫ –Ω–∞: {webhook_url}")

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        result = asyncio.run(set_webhook_async(webhook_url))
        return result
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}")
        # –ü—Ä–æ–±—É–µ–º —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º URL —Ñ–æ—Ä–º–∞—Ç–æ–º
        alt_webhook_base_url = f"https://{os.environ.get('RAILWAY_SERVICE_NAME', 'videopirat')}.up.railway.app"
        alt_webhook_url = f"{alt_webhook_base_url}/{BOT_TOKEN}"
        logger.info(f"–ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π URL: {alt_webhook_url}")

        try:
            result = asyncio.run(set_webhook_async(alt_webhook_url))
            return result
        except Exception as e2:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π URL): {e2}")
            return f'–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å webhook: –ü–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ {webhook_url} –∏ {alt_webhook_url}'


# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–∞
@app.route('/remove_webhook')
def remove_webhook():
    """–£–¥–∞–ª—è–µ—Ç –≤–µ–±—Ö—É–∫"""
    try:
        asyncio.run(bot.delete_webhook())
        return 'Webhook —É–¥–∞–ª–µ–Ω'
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞: {e}")
        return f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook: {e}'


if __name__ == '__main__':
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è Railway)
    port = int(os.environ.get('PORT', 8080))

    # –ü–æ–ª—É—á–∞–µ–º URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞
    try:
        app_domain = os.environ.get('RAILWAY_PUBLIC_DOMAIN')
        webhook_base_url = None

        if app_domain:
            if not app_domain.startswith(('http://', 'https://')):
                webhook_base_url = f"https://{app_domain}"
            else:
                webhook_base_url = app_domain
        else:
            webhook_base_url = os.environ.get('RAILWAY_STATIC_URL')
            if not webhook_base_url:
                webhook_base_url = f"https://{os.environ.get('RAILWAY_SERVICE_NAME', 'videopirat')}.up.railway.app"

        # –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª–µ—à–∏ –≤ –∫–æ–Ω—Ü–µ URL
        if webhook_base_url.endswith('/'):
            webhook_base_url = webhook_base_url[:-1]

        webhook_url = f"{webhook_base_url}/{BOT_TOKEN}"
        logger.info(f"–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –Ω–∞ {webhook_url}")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
        threading.Thread(
            target=lambda: asyncio.run(set_webhook_async(webhook_url)),
            daemon=True
        ).start()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        logger.info(
            "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ–±—Ö—É–∫ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ /set_webhook")

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    app.run(host='0.0.0.0', port=port)